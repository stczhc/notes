
.. only:: html

    .. math::
        \renewenvironment{equation*}
        {\begin{equation}\begin{aligned}}
        {\end{aligned}\end{equation}}
        \renewcommand{\gg}{>\!\!>}
        \renewcommand{\ll}{<\!\!<}
        \newcommand{\I}{\mathrm{i}}
        \newcommand{\D}{\mathrm{d}}
        \renewcommand{\C}{\mathrm{C}}
        \newcommand{\dt}{\frac{\D}{\D t}}
        \newcommand{\E}{\mathrm{e}}
        \renewcommand{\bm}{\boldsymbol}

.. note::
    arXiv:cond-mat/0304375.

第一章 简介
===========

从数学的观点来看, 量子力学可以看成一个本征值问题. 一般情况下我们需要计算哈密顿量的本征值和本征矢. 通常, 尤其是在低温问题中, 系统的基态和最开始几个激发态会给出所研究系统的相当多的物理. 对称性和所求的态的已知量子数可以用来缩小希尔伯特空间. 但是, 这个缩小的因子最终会被空间随体系尺寸的指数增加而显得无关紧要. 这意味着, 即使对相对小的系统, 所需的内存和运行时间将是巨大的, 当考虑完全对角化的时候. 对这个问题的一般解决方法是, 积分掉原问题的许多自由度, 从而它可以适配当前的计算条件.

这个讲义包括对兰索斯方法和密度矩阵重整化群 (DMRG) 的介绍, 它们是低维量子模型中两个主导的数值方法. 另一种重要的数值方法是量子蒙特卡洛. 数值方法允许对有限团簇的物理性质进行直接的和无偏移的计算, 从而可以构造相图.

似乎研究低维问题和三维实际完全无关. 实际上有很多原因可以导致低维物理. 第一, 低维系统可以作为考虑新理论观点的有效的实验平台. 热力学和量子涨落在低维时都更显著. 第二, 存在现实中的系统, 表现出高度的地位特性, 至少在凝聚态物理. 第三, 一维系统在经历 **量子相变** 时和高维体系有类似地可能性, 当固定温度 :math:`T= 0` 而改变一些参数的时候. 对实验而言, 这些参数可以是压强或者掺杂. 例如高温超导的情况, 当改变掺杂, 基态从反铁磁态变为超导态.

第二章 模型
===========

这一节我们介绍一些代表性的量子模型. 这些模型和它们的一般化在统计力学和凝聚态物理有广泛的应用.

2.1 Hubbard 模型
----------------

研究晶体中电子运动的微观方法的一个出发点是, 分析原子的能级. 我们使用晶格模型, 因为物理系统的原子结构决定了电子将在何处出现. 如果两个相邻原子具有能量接近的重叠轨道, 这些轨道可以杂化, 并允许电子在原子之间跃迁. 另一方面, 由于电荷的存在, 电子之间的排斥作用非常强, 对于电子之间的相互作用最简单的近似是限制为只考虑两个电子都在同一位点 (或原子) 上的情况. 这构成了 Hubbard 模型中的位点库仑排斥和最近邻跃迁项. 由如下哈密顿量刻画

.. math::
    H_{\mathrm{Hub}} = -t \sum_{\langle ij \rangle \sigma} \left( c_{i\sigma}^\dagger c_{j\sigma} +
        \mathrm{h.c.} \right) + U \sum_{i} n_{i\uparrow} n_{i \downarrow}
    :label: eq21

其中 :math:`c_{i\sigma}^\dagger (c_{i\sigma})` 是具有自旋 :math:`\sigma = \uparrow, \downarrow` 的电子的产生 (湮灭) 算符, 这个电子在格点 :math:`i` 处的 Wannier 轨道. :math:`\langle ij \rangle` 表示最近邻原子对. 在求和中, 每个键 :math:`\langle ij\rangle` 仅仅被求和一次. :math:`t` 是从一个格点穿越到相邻格点的矩阵元, 即最近邻电子波函数的重叠. h.c. 表示之前项得厄米共轭. 费米子算符遵守反对易规则

.. math::
    \big\{ c_{i\alpha}, c_{j\beta}^\dagger \big\} = \delta_{ij} \delta_{\alpha\beta}

和

.. math::
    \{ c_{i\alpha}, c_{j\beta} \} = 0.

另外, :math:`n_{i\sigma} = c_{i\sigma}^\dagger c_{i\sigma}` 是具有自旋 :math:`\sigma` 在格点 :math:`i` 的电子的粒子数算符. :math:`U` 是库仑斥力. 格点 :math:`i` 的电荷或粒子数算符是

.. math::
    n_i = \sum_\sigma n_{i\sigma} = n_{i\uparrow} + n_{i\downarrow}.

模型的状态通过确定每个格点的 4 种可能状态 (能级可以是未被占据, 或者包含具有两种自旋之一的电子单占据, 或者两个相反自旋的电子双占据) 来给定. 假定模型包括 :math:`L` 个格点.

但是, 参数 :math:`t` 和 :math:`U` 并不足以表示系统. 还需要知道:

* 系统的维度.
* 格点的几何, 比如对称性.
* 边界条件, 即格点是开放的还是闭合的.
* 填充或密度 (即体系中的电子数):

  .. math::
        n = \frac{1}{L} \sum_{i\sigma} \langle n_{i\sigma} \rangle,
  
  其中 :math:`\langle \dots \rangle` 表示基态期望值.

* 温度 :math:`T`, 作为除了 :math:`t` 和 :math:`U` 的第三个能量尺度.

:eq:`eq21` 的哈密顿量中的第一项称为跃迁项, 第二项称为库仑项. 如果只有跃迁项, 这个模型会导致普通的能带谱和单电子 Bloch 态, 其中每个电子都分布在整个晶体 (即金属). 如果只有库仑项, 将更偏好局域磁矩, 因为它降低了第二个电子 (具有相反自旋) 在单占据态的可能性 (即绝缘体). 当两项都存在时, 它们之间的竞争导致了从金属态到 Mott 绝缘态的变化.

2.2 :math:`t-J` 模型
--------------------

如果考虑 Hubbard 模型在 :math:`U/t` 很大的极限, 即 **强耦合极限**, 双占据的位点将会很少. 这导致我们可以推导有效模型, 其中最著名的是 :math:`t-J` 模型. 在 :math:`t-J` 模型, Hubbard 模型的复杂度降低了, 我们通过投影排除了双占据的态. :math:`t-J` 哈密顿量如下

.. math::
    H_{tJ} = -t \sum_{\langle ij \rangle \sigma} \big( \tilde{c}_{i\sigma}^\dagger \tilde{c}_{j\sigma} + \mathrm{h.c.} \big) + J \sum_{\langle ij \rangle} \left( \bm{S}_i \cdot \bm{S}_j - \frac{1}{4} n_in_j \right)

其中

.. math::
    \bm{S}_i = \sum_{\alpha\beta} c_{i\alpha}^\dagger \bm{\sigma}_{\alpha\beta}c_{i\beta}

是格点 :math:`i` 的电子自旋算符, 其中泡利矩阵满足

.. math::
    \bm{\sigma} = [\sigma^x, \sigma^y, \sigma^z] = \left[
        \begin{pmatrix} 0 & 1 \\ 1 & 0 \end{pmatrix},
        \begin{pmatrix} 0 & -\I \\ \I & 0 \end{pmatrix},
        \begin{pmatrix} 1 & 0 \\ 0 & -1 \end{pmatrix}
        \right]

跃迁项中的 :math:`\tilde{c}` 算符表示产生算符不能在一个已经有一个电子的格点引入另一个电子, 即使它们自旋相反. 形式上可以这样表示

.. math::
    \tilde{c}_{i\sigma}^\dagger =&\ c_{i\sigma}^\dagger (1-n_{i,-\sigma}) \\
    \tilde{c}_{i\sigma} =&\ (1-n_{i,-\sigma})c_{i\sigma}

为了从 Hubbard 模型推导出 :math:`t-J` 模型, 我们考虑双占据态作为中间态, 因为它的能量较高从而不出现, 但是它可以通过提高电子的流动性而降低动能. 在这样的过程中, 一个电子跃迁到一个已经被占据的格点, 然后这个格点上的任何一个电子都可以跃迁回原来的格点. 双占据在 :math:`t-J` 模型中是禁止的, 但是它的物理可以通过增加一个附加项来引入. 由于上述提到的 Hubbard 模型的中间过程只有当相邻位点具有相反自旋时才可能发生, 这个附加项可以表示为一个偏好单重态而不是三重态的相互作用. 这就是上述哈密顿量中的第二项. 为了证明这一点, 注意到 :math:`\bm{S}_i \cdot \bm{S}_j` 有两个特征值: 如果两个电子处于单重态, 本征值是 :math:`-3/4`, 如果处于三重态, 能量是 :math:`1/4`. 如果 :math:`\frac{1}{4}n_in_j` 的作用也包括进来, 则我们从 :math:`J` 项得到如下的能量:

* 如果任意一个格点未被占据: :math:`0`.
* 如果构成三重态: :math:`0`.
* 如果构成单重态: :math:`-J`.

注意, 这里单重态 (:math:`S = 0`) 为

.. math::
    |{}^1\psi\rangle = \frac{1}{\sqrt{2}} \big( |\alpha\beta\rangle - |\beta\alpha\rangle \big)

三重态有三个  (:math:`S = 1`) , 分别是 :math:`|\alpha\alpha\rangle`, :math:`|\beta\beta\rangle` 和

.. math::
    |{}^3\psi\rangle = \frac{1}{\sqrt{2}} \big( |\alpha\beta\rangle + |\beta\alpha\rangle \big)

它们分别属于自旋投影本征值 :math:`M = +1, -1, 0`. 在 heisenberg.hs 中有具体的计算. 注意这个程序中只考虑两个位点, 每个位点都是单占据. 其实在 :math:`t-J` 模型中还有无占据的情况. 所以每个位点应该存在三种可能状态.

因此, 这个项使得相邻位点两个电子具有相反自旋的态的能量降低. Hubbard 模型的二阶微扰论计算给出 :math:`J = 4t^2/U`.

2.3 海森堡模型
--------------

在半填充的情况下 :math:`(n = 1)`, 当对所有格点 :math:`n_i \equiv 1`, 在 :math:`t-J` 模型中跃迁就不可能了. (跃迁矩阵元不为零时, 两个态必须包含一个空占据的位点, 比如 :math:`|0\alpha\rangle` 和 :math:`|\alpha 0\rangle`). 除此之外, :math:`\frac{1}{4}n_in_j` 项简化为一个常数. 因此在半填充的情况, 我们可以忽略 :math:`t-J` 模型中的这两项, 这成为自旋 :math:`1/2` 的海森堡模型,

.. math::
    H_{Heis} = J\sum_{\langle ij \rangle} \big( \bm{S}_i \cdot \bm{S}_j \big).

必须注意这是一个有效模型, 也就是说, 尽管模型中的自旋是局域化的, 它仍然描述运动电子的系统. :math:`\bm{S}_i \cdot \bm{S}_j` 相互作用称为自旋 **交换** 作用.

所有这些模型原本都被设计用来描述物理系统. Heisenberg 模型在 Hubbard 模型之前提出, 并不仅限于自旋 :math:`1/2` 的系统. 我们在上面做了这个限制是考虑到电子是自旋 :math:`1/2` 的费米子. 这些模型的一种可能推广是把最近邻求和推广为更远的邻接点.

第三章 有限尺寸系统
===================

现在我们已经构造了哈密顿量并相信这些哈密顿量中包含我们感兴趣的物理. 接下来的困难任务是计算可观测量从而获得对这些模型的理解.

这里我们选择考虑两种无偏移的数值方法, 即兰索斯方法和 DMRG. 这些方法是无偏移的 (相对于基于平均场的方法), 意味着它们不会对系统的基态的特性做初始假设. 但是, 我们将会看到, 这两种数值方法都有各自的缺陷.

研究有限尺寸系统的一般想法是构造哈密顿量的矩阵表示, 包括一定数量的位点 (决定了系统的尺寸). 接下来对哈密顿量进行对角化, 得到能量谱并计算可观测量, 例如自旋和电荷相关函数. 我们对不同尺寸的系统重复这一过程并外推结果, 从而得到无限尺寸系统 (即外推到热力学极限). 这个过程一般都会比较成功, 假设我们有足够的数据来做可靠的外推的话. 为了使外推收敛, 所需的不同尺寸的格点数极大地依赖于所研究的模型, 甚至依赖于对特定模型所用的参数. 当有临界行为时, 有限尺度缩放理论是特别有用的, 因为在这种情况下, 我们期待物理量对系统尺寸有很强的依赖. 但是, 在很多情况下, 我们可以通过检查仅仅少数系统尺寸就可以对热力学极限的性质得到一个相对好的了解. 我们考虑的模型包括很多参数 (例如 :math:`n, t, U` 和 :math:`J`). 为了构造相图, 我们必须系统性地覆盖参数空间, 从而了解物理量如何依赖于这些参数.

我们可以粗略地将上述任务分为两步:

* 构建哈密顿量的一个表示, 对角化, 然后计算相关可观测量.
* 解释结果, 并构造相图.

其中第二步严重依赖于所研究的模型, 并且依赖于我们考虑的是什么样的物理. 如果被研究的是物理学中的高级主题 (正如通常的情况), 那么就需要相当多的在那个领域的经验来完成这一步. 另一方面, 第一步原则上简单很多, 仅包括量子力学的基本概念和数值分析, 这些课题在大多数本科物理课程都有覆盖. 兰索斯和 DMRG 是完成第一步的工具. 为了理解为什么需要这样特殊的技术, 我们假设研究 :math:`L` 格点上的海森堡模型. 每个位点有两个可能的态: 自旋向上和自旋向下. 一个具有 :math:`L` 位点的格点有 :math:`2^L` 中状态, 这就是哈密顿量矩阵的维数. 类似地, 对 :math:`t-J` 和 :math:`Hubbard` 模型我们分别有 :math:`3^L` 和 :math:`4^L`. 由于这个随着 :math:`L` 指数增加的因子, 即使对于小格点 (通常 10 个左右的位点), 会产生很大的哈密顿量从而很难用现在的计算机和标准对角化算法计算.

3.1 对称性
----------

在构建哈密顿量的表示的过程中, 利用模型的对称性是非常有用的. 很多模型, 包括第二章所提到的, 具有总自旋, z-方向的总自旋, 和总电荷守恒的性质, 即

.. math::
    \big[ H, \bm{S}^2 \big] = [H, S^z] = [H, N] = 0.

其中 :math:`H` 是模型哈密顿量, 而

.. math::
    \bm{S} = \sum_i \bm{S}_i, \quad N = \sum_i n_i

除此之外, 这些算符彼此之间对易

.. math::
    \big[ \bm{S}^2, S^z \big] = [S^z, N] = \big[N, \bm{S}^2\big] = 0

因此, :math:`H, \bm{S}^2, S^z` 和 :math:`N` 的本征值同时是好量子数, 表示为 :math:`E, S(S+1), S^z` 和 :math:`N`. 在给定模型的数值处理中, 我们考虑这样的本征态, 它同时对角化 :math:`H` 和所有和对称性相关的算符. 为了做到这一点, 我们选择一个表象, 在这个表象中对称算符总是对角化的, 从而选择了 Hilbert 空间的一个子空间, 在这个子空间中这些算符取特定的本征值. 然后我们在这个子空间对角化 :math:`H`. 正如下面将要提到, 总自旋在 :math:`z`-方向的投影和总电荷很容易实现. 但是, 总自旋 :math:`\bm{S}^2` 更难指定, 并且也很难测量, 由于它用基本算符 :math:`c_{i\sigma}` 表示起来, 极其非局域

.. math::
    \bm{S}^2 = \sum_{a,ij,\alpha\beta\gamma\delta} c_{i\alpha}^\dagger \frac{1}{2}\sigma_{\alpha\beta}^a c_{i\beta}
        c_{j\gamma}^\dagger \frac{1}{2}\sigma_{\gamma\delta}^a c_{j\delta}

其中 :math:`i` 和 :math:`j` 都跑遍整个格点, 也就是说, 不仅仅包括最近邻格点. 但是, 在选择 :math:`z` 轴量子化方向是任意的情况下, 即, 当存在完整的旋转 (或 :math:`SU(2)`) 对称性, :math:`H,N` 和 :math:`\bm{S}^2` 的本征值将会不依赖于 :math:`S^z` 的本征值. :math:`S^z` 本征值在这种情况下可取 :math:`-S` 到 :math:`S` 之间的任何数. 在决定基态总自旋量子数 :math:`S` 的时候, 这会非常有用, 如果只有在测量时才能指定投影 :math:`S^z`.

我们考虑具有自旋投影 :math:`S^z` 的子空间, 其基态记为 :math:`E(S^z)`. 如果 :math:`E(S^z) < E(S^z + 1)` 并且 :math:`E(S^z) = E(S^z - 1) = \cdots = E(S_{\min}^z)`, 其中

.. math::
    S_{\min}^z = \begin{cases} 0 & \text{若}\ S^z\ \text{为整数} \\ \frac{1}{2} & \text{若}\ S^z\ \text{为半奇数} \end{cases}

那么绝对基态 (即在没有限制 :math:`S^z` 的 Hilbert 空间的基态) 仅包含一个自旋为 :math:`S^z` 的态, 不包括任何其他更高自旋的态.

强关联电子模型通常也具有 **电子-空穴** 对称性. 这个对称性将产生电子和按照如下方式的消除联系起来. 考虑变换

.. math::
    \text{PH}: c_{i\sigma} \to (-1)^i c_{i\sigma}^\dagger.

在这个变换下, 最近邻跃迁项按照下式进行变换

.. math::
    \text{PH}: c_{i\sigma}^\dagger c_{i+1,\sigma} + \mathrm{h.c.}
        \to -c_{i\sigma} c_{i+1,\sigma}^\dagger + \mathrm{h.c.}
        \to c_{i+1,\sigma}^\dagger c_{i\sigma} + \mathrm{h.c.}
        \to c_{i\sigma}^\dagger c_{i+1,\sigma} + \mathrm{h.c.}

其中最后一步是利用了厄米共轭项, 倒数第二步是反对易关系. 因此, 最近邻跃迁项在这个变换下不变. 但是粒子数算符按下式进行变换

.. math::
    \text{PH}:&\ n_{i\sigma} = c_{i\sigma}^\dagger c_{i,\sigma} \to c_{i,\sigma} c_{i\sigma}^\dagger
        = 1 - c_{i\sigma}^\dagger c_{i,\sigma} = 1 - n_{i\sigma} \\
    \text{PH}:&\ n_i \to 2 - n_i \\
    \text{PH}:&\ N \to 2L - N

类似地, 导带电子自旋算符按照下式变换

.. math::
    \text{PH}:&\ \bm{s}_i = (s_i^x, s_i^y, s_i^z) \to (-s_i^x, s_i^y, -s_i^z) = R \bm{s}_i \\
    \text{PH}:&\ \bm{S} = (S^x, S^y, S^z) \to (-S^x, S^y, -S^z) = R \bm{S} \\
    \text{PH}:&\ \bm{S}^2 \to \bm{S}^2

其中 :math:`R` 表示一个角度 :math:`\pi` 的自旋空间绕 :math:`y` 轴的旋转. 如果这个粒子-空穴对称性应用到整个哈密顿量, 即, 不仅仅是无相互作用的动能部分, 还包括相互作用部分, 那么将会有量子数 :math:`(E,S,S^z, N)` 的本征态和量子数 :math:`(E,S,-S^z, 2L-N)` 的本征态之间的一一对应. 特别地, 如果我们希望决定系统在远离半填充情况下的性质, 那么我们只需要考虑低于半填充的情况, 而高于半填充的情况的物理是完全一致的.

为了减少有限尺寸效应, 通常会选择周期边界条件 (PBC), 来在某方向消除格点边界. 在这个情况下, 系统在那个方向会获得平移不变性. 这个对称性通过 :math:`H` 和平移算符 :math:`T` 的对易来表达, 平移算符定义为

.. math::
    T |d_1d_2\cdots d_{L-1}d_L\rangle = |d_2\cdots d_{L-1}d_Ld_1\rangle
    :label: eq315

其中

.. math::
    |d_1d_2\cdots d_{L-1}d_L\rangle = |d_1\rangle \otimes|d_2\rangle \otimes \cdots \otimes |d_{L-1}\rangle\otimes|d_L\rangle

:math:`d_i` 是在位点 :math:`i` 的态 (例如, 对 Hubbard 模型, :math:`d_i` 可以是一个自旋向上或向下的电子, 或者两个自旋相反的电子, 或者空位点). 在 :eq:`eq315` 中我们为简单起见, 假定了长度 :math:`L` 的一维格点. 在高维的情况, 每个方向的平移不变性可以分别处理. :math:`T` 的本征值是 :math:`\E^{\I \frac{2\pi}{L}k}`, :math:`k = 0,1,2,\cdots, L-1`. 我们用数字 :math:`k` 标记. :math:`T` 具有本征值 :math:`k` 的本征态 :math:`\phi_k` 由下式给出

.. math::
    \phi_k = C \big[ 1 + U + U^2 + U^3 + \cdots + U^{L-1} \big] |d_1d_2\cdots d_{L-1}d_L\rangle, 

其中 :math:`U = \E^{\I \frac{2\pi}{L}k} T`, :math:`C` 是归一化常数. 如果 :math:`\phi_k = 0`, 则不可能通过 :math:`|d_1d_2\cdots d_{L-1}d_L\rangle` 构造具有动量 :math:`k` 的态. 注意 :math:`S, N, S^z` 和 :math:`k` 同时是好量子数.

另一个很多模型具有的对称性是电荷共轭对称性. 这个对称性意味着具有量子数 :math:`(E, S, S^z, N)` 和量子数 :math:`(E, S, -S^z, N)` 的本征态之间有一一对应. 当哈密顿量和宇称算符对易时, 就存在这个对称性. 宇称算符的效果是翻转粒子自旋. 在具有电荷共轭对称性的情况下, 我们可以只考虑 :math:`S^z \leq 0` 或只考虑 :math:`S^z \geq 0`.

现在考虑一条链 4 个位点的 :math:`t-J` 模型, 考虑 PBC. 每个位点可以是下列态之一: 一个自旋向上的电子 (:math:`|\uparrow\rangle`) 或向下的电子 (:math:`|\downarrow\rangle`), 或者空 (:math:`|0\rangle`). Hilbert 空间的总尺寸是 :math:`3^L = 3^4 = 81`. 我们将空间划分按照量子数 :math:`N, S^z` 和 :math:`k` 进行划分.

第五章 密度矩阵重整化群算法
===========================

5.1 概述
--------

克服系统尺寸限制的基本思想是利用一种基组, 在这个基组中基态可以由少数基矢表示. 也就是说, 必须找到一种方法来识别或构造重要的态, 同时忽略或丢弃其他的态从而可以保持所考虑 Hilbert 子空间比较小. 第四章介绍的截断的兰索斯方法是这个思想的一种可能实现方法. 它的优势在于, 考虑由直觉意义的态构成的基组, 从而所得到的结果很容易直观理解. 除此之外, 动力学信息的获得也不困难. DMRG 是一种替代方案, DMRG 的创新性在于, 它不选择一种特别地基组, 而是在寻找基态的计算过程中优化基组. DMRG 的一个劣势是算法选择的基矢并不是直觉的, 对这些态的描述需要对观测量进行测量. 对于测量过程, 需要有算符在当前基组的表示. 因此每个需要被测量的算符都必须存储, 并且每当改变基组时它们也必须进行变换. 这需要相当的时间和内存开销. 另一个劣势是动力学信息不容易获得.

历史上 DMRG 起源于 Wilson 提出的重整化群方法. 考虑实空间格点系统的 Wilson 原始方法的块版本, 其基本思想是从一个可以精确处理小系统开始. 在此之后可以在不增加 Hilbert 空间尺寸的情况下增加系统的尺寸, 直到达到所需的系统尺寸.

在不增加 Hilbert 空间尺寸的情况下增加系统的尺寸有以下两步:

* 增加系统尺寸, 从而同时 Hilbert 空间尺寸也增加.
* 截断 Hilbert 空间尺寸到其原来的尺寸, 而保持系统尺寸不变.

为了实现 **重整化** 过程, 需要回答两个基本问题:

* 如何执行扩增过程?
* 在第二步采用何种条件来区分需要保留的态和需要舍弃的态?

在类似 Wilson 的方法中, 我们从某小尺寸的块开始. 第一步, 连接两个这样的块来构成两倍大小的块. 这个较大的块的哈密顿量可以严格对角化, 从而得到本征态并用它们作为基矢. 决定保留态的条件是它们的能量, 只有能量低于某阈值的本征态被保留. 然后, 由保留的态表示的新块再通过连接到和它本身完全一致的块, 按此方式进行算法迭代.

这个方法被证明对 Kondo 模型非常有效. 但是, 对其他强关联系统, 比如第二章的模型, 它并不是很成功. 失败的主要原因在于选择块本征态作为需要保留的态. 由于块在连接之前并没有连接到剩余部分的系统 (在上面的例子中是另一个完全一致的块) 它的本征态在块终点具有不合适的特性. 这使得它们成为一种不好的基组选择, 对于表示由两块 (或更多) 块合并而成较大系统的基态而言. White 和 Noack 指出了这个问题, 并尝试通过合并几个在不同边界条件下的不同的块的本征态来解决这个问题. 接下来我们看 DMRG 如何解决这个问题.

5.2 DMRG 过程的扩增和约化
-------------------------

最基本的单元是一个位点, 表示为这个位点可能处于的态 :math:`d_i (i=1,\cdots D)`. 一个 **块** :math:`B(l,m)` 包括一些位点 :math:`l` 和它的哈密顿量 :math:`H_B` 仅包括和块内的位点有关的项. 为了表示 :math:`B(l,m)` 和 :math:`H_B` 我们将它们和一个 :math:`m`-维基组关联, 其中一般 :math:`m` 比块的完全 Hilbert 空间尺寸要小. 基组中的态按照对称性子空间分组, 采用一系列量子数标记 (例如 :math:`S^z` 和 :math:`N`), 这使得 :math:`H_B` 成为块对角的矩阵. 我们也存储 :math:`H_B` 在这些态之间的矩阵元. 块通过增加一个位点来进行扩增, 并构成 **扩增块** :math:`B^e`. 如果 :math:`|b_1\rangle, \cdots |b_m\rangle` 和 :math:`|d_1\rangle\cdots |d_D\rangle` 分别表示块的和位点的基组, 那么扩增块的基组可以由直积构成

.. math::
    |b_k^e\rangle = |b_i\rangle \otimes |d_j\rangle.

:math:`B^e` 的 Hilbert 空间的维数是 :math:`B(l,m)` 的 Hilbert 和一个位点的空间维数之积, 即 :math:`m\times D`. 一个可能的从 :math:`i, j` 值到 :math:`k` 值的映射为 :math:`k = (i - 1)D + j` (这里假定了序号从 1 开始).

DMRG 方法的下一步是构成 **超块** 哈密顿量. 超块包括相互连接的两个扩增块. 我们这里考虑开放边界条件 (OBC). 这个边界条件在 DMRG 中是用得最多的, 因为它对于给定的计算能力给出最好的结果. 稍后将讨论周期边界条件.

DMRG 方法重点考虑超块哈密顿量 (通常是基态) 的一个单一本征态, 称为 **目标态**, 被用来构造密度矩阵 (采用多个目标本征态也是可能的, 但是对于给定的计算能力来说, 精确度会迅速降低). 超块的基态会被计算 (采用兰索斯或任何其他方法). 之后, 我们从扩增块的基组中消除对超块基态贡献最小的态. 为了计算这些态, 我们利用密度矩阵.

密度矩阵的概念是从统计力学发展而来的. 考虑一个系统和比它大得多的热库接触的情况. 整个体系 (即系统和热库) 的基态是已知的. 从而问题就是系统的哪些态对这个基态贡献最多. 这是密度矩阵能告诉我们的. 我们可以将整个体系 (超块) 表示在一个基组, 这个基组是系统 (扩增块之一) 和热库 (另一个扩增块) 的基矢的直积,

.. math::
    |\Psi_0\rangle = \sum_{i=1}^{m=D} \sum_{j=1}^{m'\times D} a_{ij} |b_i^e\rangle \otimes |{b'}_j^e\rangle.

因此, 许多系统的本征态都对整个体系的基态有贡献. 系统的密度矩阵为

.. math::
    \rho_{ii'} = \sum_{j=1}^{m'\times D} a_{ij}a_{i'j}^*.
    :label: eq53

下面我们考虑这样的计算的一个具体例子. 密度矩阵和扩增块的哈密顿量 :math:`H_e` 具有一样的块对角结构. 如果我们把 :math:`\rho` 的本征态和本征值分别记为 :math:`|u_\alpha\rangle (\alpha = 1,\cdots, m\times D)` 和 :math:`w_\alpha`, 那么 :math:`\sum_\alpha w_\alpha = 1`, :math:`w_\alpha` 是在整个体系处于态 :math:`|\Psi_0\rangle` 的条件下系统处于态 :math:`|u_\alpha\rangle` 的概率.

这就是我们在重整化群方法中决定保留哪些态所需的信息. 为了对于丢弃和保留哪些态做出最佳选择, 考虑态在较大系统的基态中的权重 :math:`w_\alpha` 会是比较好的条件, 而这个较大系统是我们最终想要描述的. 我们必须将 :math:`|u_\alpha\rangle` 按照特征值降低的顺序排序, 并保留其中的 :math:`m` 个具有最大本征值的态. 这些态构成扩增块 :math:`B^e` 的一个新基组, 最终成为 :math:`B(l+1,m)`. 用符号表示, 即

.. math::
    H_{B(l+1,m)} = OH_eO^\dagger,

其中 :math:`m\times(m\times D)` 矩阵 :math:`O` 的行通过之前选定的 :math:`|u_\alpha\rangle` 构成. 上式的基组变换是对 Hilbert 空间的重整化, 将它的尺寸重新切割到 :math:`m`. 按照这种方式构造的块将对于下一步连接到另一个块, 从而构成新的超块准备更加充分. 通过使用密度矩阵态我们某种程度上 **探测未来** 并将块和它适配. 除 :math:`H_B` 之外, 我们还需要存储表示块边界位点的算符. 这些算符对于构建块和位点的相互作用是必要的, 当构成扩增块和上式的变换的时候.

为了展示 DMRG 扩增和截断的步骤, 一个对反铁磁自旋 :math:`1/2` 海森堡链的完整的 DMRG 步骤将被执行. 起始点是对单个位点的块 :math:`B(1,2)`. 一个单一位点可能的态是

.. math::
    |b_1\rangle = |\uparrow\rangle,\quad |b_2\rangle = |\downarrow\rangle.

为方便选择了自旋向上/向下基组. 基组本身并不存储. 存储的数据是为了进行算法而需要的算符, 即为了构建扩增块和超块的哈密顿量的算符.

对于一个没有外场的孤立块哈密顿量是零. 由于选择了向上/向下基组, 其他的算符是自旋矩阵

.. math::
    S^{\pm} = \frac{1}{2} (\sigma^x \pm \I \sigma^y),\quad S^z = \frac{1}{2}\sigma^z.

为了构建扩增的系统, 添加了另一个位点. 在这个情况下, 块的基组和增加的位点的基组是一样的,

.. math::
    |d_1\rangle = |\uparrow\rangle,\quad |d_2\rangle = |\downarrow\rangle,

算符和块的算符看起来一样. 因此, 扩增块的基组为

.. math::
    |b_1^e\rangle =&\ |\uparrow\uparrow\rangle \\
    |b_2^e\rangle =&\ |\uparrow\downarrow\rangle \\
    |b_3^e\rangle =&\ |\downarrow\uparrow\rangle \\
    |b_4^e\rangle =&\ |\downarrow\downarrow\rangle.

扩增块 :math:`B(2,4)` 的哈密顿量 :math:`H_e` 有非零元, 描述 :math:`B(2,4)` 中位点的相互作用. :math:`H_e` 包括 :math:`H_B`, 描述块内的相互作用, 以及块最右边自旋和新位点的相互作用. 在上述基组扩增块的海森堡哈密顿量为

.. math::
    H_e =&\ H_B\otimes I_d + \frac{1}{2} \big( S_b^+ \otimes S_d- + S_b^- \otimes S_d+ \big)
        + S_b^z \otimes S_d^z \\
    =&\ \begin{pmatrix} 0 & 0 \\ 0 & 0 \end{pmatrix}
        \otimes \begin{pmatrix} 1 & 0 \\ 0 & 1 \end{pmatrix} \\
    &\ + \frac{1}{2} \left[
        \begin{pmatrix} 0 & 1 \\ 0 & 0 \end{pmatrix}
        \otimes \begin{pmatrix} 0 & 0 \\ 1 & 0 \end{pmatrix}
        + \otimes \begin{pmatrix} 0 & 0 \\ 1 & 0 \end{pmatrix}
        \begin{pmatrix} 0 & 1 \\ 0 & 0 \end{pmatrix}
        \right] \\
    &\ + \frac{1}{4} \begin{pmatrix} 1 & 0 \\ 0 & -1 \end{pmatrix}
        \otimes \begin{pmatrix} 1 & 0 \\ 0 & -1 \end{pmatrix}
    :label: eq59

结果如下

.. math::
    H_e = \frac{1}{4} \begin{pmatrix}
    1 & 0 & 0 & 0 \\ 0 & -1 & 2 & 0 \\ 0 & 2 & -1 & 0 \\ 0 & 0 & 0 & 1
    \end{pmatrix}.

在 :eq:`eq59` 中指标 :math:`b` 和 :math:`d` 分别表示作用在块和位点的 Hilbert 空间的算符. :math:`I` 是单位矩阵. 在第一步我们有 :math:`m = D = 2`. 但是当块在接下来的步骤中增长尺寸时我们会有 :math:`m > D`. 注意只有块的哈密顿量和块的最右边位点和新位点的算符 :math:`S^+, S^-` 和 :math:`S^z` 的表示对于构造扩增块是必须的.

通过把扩增块作为左块, 然后将它连接到右边的另一个扩增块, 可以构造超块. 在下一节将要讨论的 **无限尺寸方法**, 右块和左块是一样的,仅仅是空间 **反射** 因此最后添加到左块的位点连接到最后添加到右块的位点. 左块的最右边变成了右块的最左边.

除了扩增块的哈密顿量之外, 还需要扩增块最右位点的自旋算符的表示. 为了在扩增块基组构建 :math:`S^+, S^-` 和 :math:`S^z` 的表示, 我们需要计算块 Hilbert 空间的单位矩阵和最右位点基组中算符的表示的张量积. 例如, 在扩增块基组中最右位点的自旋 :math:`S^+` 算符, 即 :math:`(S_r^+)_e` 矩阵, 由下式给出

.. math::
    (S_r^+)_e = I_b \otimes S_d^+ =
        \begin{pmatrix} 1 & 0 \\ 0 & 1 \end{pmatrix}
        \otimes \begin{pmatrix} 0 & 1 \\ 0 & 0 \end{pmatrix}.

:math:`(S_r^-)_e` 和 :math:`(S_r^z)_e` 的表示可以由类似方法得到. 超块的基组是两个连接的扩增块基组的张量积. 一般地, 左块和右块的基组 :math:`|b_i^e\rangle` 和 :math:`|{b'}_i^e\rangle` 是不同的基组. 假设我们想计算基态性质, 可以利用 :math:`S^z` 守恒和基态属于 :math:`S^z = 0` 的子空间. 因此, 我们可以仅考虑这个对称子空间的态

.. math::
    |b_1^{s(0)} \rangle \equiv &\  |b_4^s \rangle = |\uparrow\uparrow\downarrow\downarrow\rangle \\
    |b_2^{s(0)} \rangle \equiv &\  |b_6^s \rangle = |\uparrow\downarrow\uparrow\downarrow\rangle \\
    |b_3^{s(0)} \rangle \equiv &\  |b_7^s \rangle = |\uparrow\downarrow\downarrow\uparrow\rangle \\
    |b_4^{s(0)} \rangle \equiv &\ |b_10^s \rangle = |\downarrow\uparrow\uparrow\downarrow\rangle \\
    |b_5^{s(0)} \rangle \equiv &\ |b_11^s \rangle = |\downarrow\uparrow\downarrow\uparrow\rangle \\
    |b_6^{s(0)} \rangle \equiv &\ |b_13^s \rangle = |\downarrow\downarrow\uparrow\uparrow\rangle

超块的哈密顿量包含三部分: 两个扩增块的 **内部** 哈密顿量和由自旋相互作用导致的交换和两者的连接:

.. math::
    H_s = H_e\otimes I'_e + I_e\otimes H'_e + \frac{1}{2} \big[
        (S_r^+)_e \otimes (S_r^-)'_e + (S_r^-)_e \otimes (S_r^+)'_e
        \big] + (S_r^z)_e \otimes (S_r^z)'_e

其中撇号标记构成超块的第二个扩增块的 Hilbert 空间中的算符. 我们现在在基组 :math:`|b_i^{s(0)}\rangle` 中构建哈密顿量 :math:`H_s` 的表示:

.. math::
    H_s^{(0)} = \frac{1}{4} \begin{pmatrix}
    1 & 0 & 2 & 0 & 0 & 0 \\
    0 & -1& 2 & 2 & 0 & 0 \\
    2 & 2 &-3 & 0 & 2 & 0 \\
    0 & 2 & 0 &-3 & 2 & 2 \\
    0 & 0 & 2 & 2 & -1& 0 \\
    0 & 0 & 0 & 2 & 0 & 1
    \end{pmatrix}

:math:`H_s^{(0)}` 的基态能量是 :math:`E_0 = (1/4)(3+2\sqrt{3})` 对应的本征矢是

.. math::
    |\Psi_0\rangle = \frac{1}{2\sqrt{3(2+\sqrt{3})}}
    \begin{pmatrix} 1 \\ 1 + \sqrt{3} \\ -2-\sqrt{3} \\ -2-\sqrt{3} \\ 1 + \sqrt{3} \\ 1\end{pmatrix}

为了决定左扩增块中的哪些态对于超块的基态来说是最重要的, 我们使用 :eq:`eq53` 的密度矩阵. 有

.. math::
    |b_1^{s(0)} \rangle =&\ |b_1^e \rangle \otimes |{b'}_4^e \rangle \\
    |b_2^{s(0)} \rangle =&\ |b_2^e \rangle \otimes |{b'}_2^e \rangle \\
    |b_3^{s(0)} \rangle =&\ |b_2^e \rangle \otimes |{b'}_3^e \rangle \\
    |b_4^{s(0)} \rangle =&\ |b_3^e \rangle \otimes |{b'}_2^e \rangle \\
    |b_5^{s(0)} \rangle =&\ |b_3^e \rangle \otimes |{b'}_3^e \rangle \\
    |b_6^{s(0)} \rangle =&\ |b_4^e \rangle \otimes |{b'}_1^e \rangle

这允许我们确定系数 :math:`a_{ij}`. 除了 :math:`a_{14}, a_{22}, a_{23}, a_{32}, a_{33}, a_{41}` 之外都是零. 密度矩阵为

.. math::
    \rho = \frac{1}{12(2 + \sqrt{3})} \begin{pmatrix}
    1 & 0 & 0 & 0 \\
    0 & 11+6+\sqrt{3} & -2(5+3\sqrt{3}) & 0\\
    0 & -2(5+3\sqrt{3}) &   11+6+\sqrt{3} & 0 \\
    0 & 0 & 0 & 1
    \end{pmatrix}

注意 :math:`\rho` 和 :math:`H_e` 具有共同的块对角化结构. :math:`\rho` 的本征值, 对于每个三重态是 :math:`(1/12)(2+\sqrt{3}) \approx 0.02`, 以及对每个单重态 :math:`(21 + 12\sqrt{3})(12(2+\sqrt{3})) \approx 0.94`. 基组根据各自的本征值进行排序, 单重态 (较大特征值) 排在前面. 变换矩阵为

.. math::
    O = \begin{pmatrix} 0 & 1/\sqrt{2} & -1/\sqrt{2} & 0 \\ 1 & 0 & 0 & 0 \end{pmatrix}

决定了基组和变换之后, 用来描述扩增块的所有算符的表示需要改变到新基组. 对 :math:`H_e` 应用变换得

.. math::
    H_{B(2,2)} = O H_e O^\dagger = \frac{1}{4} \begin{pmatrix}
    -3 & 0 \\ 0 & 1
    \end{pmatrix}

在这个简单情况 :math:`H_e` 和 :math:`\rho` 具有相同本征矢. 这就是为什么上述变换对角化 :math:`H_e`. 对其他算符可以进行同样的变换, 这些算符将会在以后的计算用到. 例如 :math:`S^+` 算符, 其在新基组下具有如下表示

.. math::
    S_r^+ = O (S_r^+)_e O^\dagger = \frac{1}{\sqrt{2}} \begin{pmatrix} 0 & 0 \\ 1 & 0 \end{pmatrix}

注意, 尽管在块 :math:`B(1,2)` 增加了一个位点得到块 :math:`B(2,2)`, Hilbert 空间的维数没有改变, 因为我们执行了截断. 在截断中保留的态是那些在超块系统的基态中具有较高概率找到的态.

在这个例子中, 我们在 Hilbert 空间进行了截断, 从而展示了算法过程. 在实际计算中, 这个系统对于截断而言太小了. 通常, 我们从一开始就知道需要保留多少态. 因此, 在最初的步骤块会增长 (通过增加位点) 而不截断, 直到所需描述块的态数量大于我们希望保留的态的数量. 例如, 如果我们决定在计算中保留 :math:`m = 20` 态, 链会增长到具有 5 个位点和 :math:`2^5 = 32` 种状态, 这是第一个 Hilbert 空间尺寸超过 20 的块. 此后, 会执行截断来从 5 个位点的扩增块构建一个 :math:`B(5,20)` 块. 在之后的步骤中, 所有块都会具有维数 20, 尽管它们表示不断增长的位点数.

我们通常使用被丢弃态的密度矩阵本征值的和 :math:`(1 - \sum_{\alpha=1}^m w_\alpha` 作为一个对于截断的严重性的测量. 目标是保持这个数越小越好. 在很多情况下, 我们发现这个数大致正比于能量的误差. 比例系数当然是跟模型有关的. 和自旋模型相比, 在掺杂费米子模型中, 我们需要保留更多态来达到较高精确度. 即使对一个给定的模型, 对给定的截断, 精确度可能依赖于在计算中使用的参数 (例如, 耦合和对称子空间). 例如, 接近相变线或者在临界 (无质量) 相之内, 强量子涨落会降低精确度. 在上面的例子中, 我们舍弃了两个三重态, 这导致了截断误差 0.04, 这相当高. 在实际计算中的截断误差通常保持在小于 :math:`10^{-4}`.

在这一节我们关注一个 DMRG 步骤. 我们讨论了通过增加一个位点来扩增块, 超块的构成和对角化, 密度矩阵的计算和截断过程. 在后面的小节中我们描述如何合并几个 DMRG 步骤来计算给定模型的性质.

5.3 无限系统算法
----------------

DMRG 方法的第一个实现是无限系统算法. 目标是利用 DMRG 的优势来将系统尺寸和 Hilbert 空间尺寸解耦合, 并计算大型系统的基态能量, 即对于精确对角化而言无法达到的系统尺寸, 最终收敛到热力学极限.

在无限系统算法, 左扩增块和它自己的镜像作为右块连接, 因此超块中位点的数量在每一步都增加 2. 增长块并截断 Hilbert 空间如上一节描述的方式进行. 算法描述如下:

1. 使链增长到某尺寸, 其中 Hilbert 空间维度正好比序号保留的态的数目 :math:`m` 大, 这是第一个扩增块.
2. 通过从右边添加一个完全一致的扩增块来构建超块, 因此最后被添加的位点彼此相邻.
3. 对角化超块, 计算相对于左扩增块的密度矩阵.
4. 改变左扩增块的基组为密度矩阵的本征基组, 仅保留 :math:`m` 个具有最大密度矩阵本征值的态. 变换和截断后的左扩增块成为下一次迭代的块.
5. 这个块被扩增, 即增加一个位点到右边.
6. 继续执行步骤 2 直到达到收敛.

从计算的观点来看, 最困难的部分是超块哈密顿量的计算和接下来的对角化. 对角化可以采取兰索斯方法或者 Davidson 算法. 计算量取决于哈密顿矩阵的尺寸和基态的精确度. 由于超块哈密顿量是块对角的, 仅仅对角化具有合适量子数的区域将缩小矩阵, 缩小因子取决于超块, 块和模型. 通常的比例是 10-20. 由于超块的总 Hilbert 空间具有维度 :math:`(D\times m)^2`, 对哈密顿量的尺寸最重要的决定因子是保留在块中的态的数量 :math:`m`. 在实际计算中 :math:`m` 通常是几百个态, 受限于计算机内存和 CPU 时间. 当我们采取不同模型的时候, 对单一位点, Hilbert 空间的尺寸 :math:`D` 也会影响达到指定精确度的计算量.

总之, 在无限系统算法, 系统尺寸在每一步增加, 而为描述块的态的数量保持不变. 目标是将链扩增到足够长, 从而能量和中心附近的短程关联收敛. 收敛通过跟踪两个连续步骤中超块的基态能量差 :math:`\Delta E_0` 来检验.

5.3 有限系统算法
----------------

在有限系统算法, 目标不再是达到热力学极限, 而是限制为有限系统尺寸 :math:`L`. 从最开始直到超块尺寸达到系统尺寸, 算法和无限尺寸算法完全一致. 当系统尺寸达到 :math:`L`, 即扩增块有 :math:`L/2` 个位点, 左块将继续扩增, 但是右边则使用具有更少位点的扩增块, 从而保持超块中位点数不变. 当右块的尺寸变为一个位点时, 则停止这个过程. 每一个这样的迭代, 即左块的所有可能尺寸都被计算一遍, 几乎达到 :math:`L`, 称为对系统的一次 **扫描**. 当一次扫描结束时, 从一个小左块重新开始. 但是从现在开始,  和左块互补以达到所需系统尺寸 :math:`L` 的右块的最佳表示的信息是存在的, 因为在之前的扫描中已经做了计算. 当左块的特定尺寸的最优基组在 DMRG 中已经确定的时候, 结果被存储并且在后面的扫描中用于描述右块的最优基组. 有限系统算法由以下步骤构成:

1. 在第一次扫描, 采用无限尺寸算法, 直到超块尺寸达到所考虑的链尺寸 :math:`L`. 在每一次截断之后, 保存约化块的所有算符到磁盘.
2. 扩增左块尺寸为 :math:`l+1`.
3. 从磁盘读取 :math:`L-l-2` 的块, 作为右块.
4. 将右块扩增到尺寸 :math:`L-l-1`.
5. 从左块和右块构建超块.
6. 对角化超块, 计算关于左扩增块的密度矩阵.
7. 改变左扩增块的基组为密度矩阵的本征基组, 保留具有最大密度矩阵本征值的 :math:`m` 个态, 保存块. 变换并截断的左扩增块将作为下一步的左块.
8. 到第二步继续, 直到右块变成单一位点.
9. 当右块变为单一位点, 开始一个新的扫描, 即构建一个左扩增块包含两个位点的超块. 到第三步继续直到收敛.

事实上有限和无限系统算法非常相似. 左块扩增, 超块构建并对角化. 之后构建左扩增块的密度矩阵, 并约化左扩增块. 这个约化的块再次扩增, 再构建超块, 以此类推. 两个算法的不同在于, 在无限系统算法右块的尺寸和左块相同. 在有限系统算法, 右扩增块和左扩增块互补到系统尺寸 :math:`L`, 因此更短, 而左扩增块不断增加.

如果超块的基态具有偶的反射对称性, 左块和右块可以互换. 这意味着, 在扫描的前半部分存储的约化左块 (当左块的尺寸小于 :math:`L/2`) 在后半部分扫描已经可以被用作右块. 但是, 如果超块基态没有反射对称性, 约化左块和右块必须独立构建和存储. 因此, 在没有反射对称性时, 需要两倍的存储空间和 CPU 时间.

当收敛时有限系统算法终止, 即当能量在连续的扫描中不再提升 (降低). 但有时能量会在两个或更多扫描中保持在某一级别, 而只会在更后面的扫描中降低. 因此, 不能只比较最后两次扫描. 需要考虑模型的收敛行为. 这可以通过考虑小系统来实现, 因为计算量较低. 收敛所需的扫描次数非常依赖于系统尺寸 :math:`L`, 保留的态 :math:`m`, 和模型本身. 费米子模型需要比自旋模型更多的扫描, 尤其是当有掺杂时. 典型的情况是, 自旋模型在不到 10 次扫描可以收敛, 即使对相当大的链 (:math:`L = 100` 或更大), 而对掺杂的 :math:`t-J` 模型, 采用相同的 :math:`m` 态数目, 将需要大约两倍的扫描数, 即使对更小的系统尺寸.

最开始的扫描不会产生非常准确的结果, 其目的只是产生不同尺寸的块较好的集合. 因此, 通常最开始的扫描会以较低的态数目进行. 当达到收敛, 可以增加在截断中保留的态数, 从而提升精确度. 这可以节约 CPU 时间, 尤其当 :math:`L` 很大的时候.

5.5 观测量的测量
----------------

每当超块对角化, 可以确定超块基态能量. 这个值用来确定是否达到收敛. 在有限系统算法我们发现当构成超块的两块具有相同尺寸时能量最低. 因此, 这个 **对称** 构型被用来所有其他感兴趣的观测量.

不幸的是, 其他观测量, 比如某自旋的 :math:`S^z` 值或者不同位点自旋之间的关联, 并不像能量那样容易获得.

这是由于每一步中基组的变换. 即使对于我们最开始使用的基组, 在基矢态中所需的测量性质我们是知道的, 或者可以轻易算出, 这个信息在新基组的基矢线性组合中会非常快地丢失. 当然我们可以对于每个态每个位点跟踪, 例如 :math:`\langle S^z \rangle`, 但是这将会导致非常高的计算需求.

我们所考虑测量的方法是对基态的算符进行求值. 在位点 :math:`i` 的 :math:`S^z` 的期望值是

.. math::
    \langle S^z_i \rangle = \langle \Psi_0 | S_i^z | \Psi_0 \rangle

这是课本上的公式, 在此处应用的困难无法从这个方程看出. 问题在于基组. 展开基态所用的基组, 在算法的每一步都会演进, 从而在最开始我们无法对它进行任何预期.

当位点 :math:`i` 被加到块, :math:`S^z` 算符在扩增块的基组的表示是已知的. 但一般而言这对于测量 :math:`\langle S^z_i \rangle` 还太早, 因为还没有达到对称构型. 为了在对称构型对 :math:`S^z` 有正确的表示, 每当基组改变时, 矩阵需要存储和更新. 更新意味着, 对 :math:`S_i^z` 应用基组变换. 如果用 :math:`(S_i^z)_j^e` 标记位点 :math:`i` 的 :math:`S^z` 算符在具有 :math:`j` 位点 (:math:`j \ge i`) 的扩增块的表示, 而 :math:`O_j` 是在增加位点 :math:`j+1` 之前的变换和截断矩阵, 那么在截断之后 :math:`S_i^z` 的表示是

.. math::
    (S_i^z)_j = O_j (S_i^z)_j^e O_j^{\dagger}.

当增加第 :math:`j+1` 个位点时, 算符的表示也需要根据下式进行调整

.. math::
    (S_i^z)_{j+1}^e = (S_i^z)_j \otimes I_d

并按照 :math:`O_{j+1}` 进行截断. 根据这个过程, 我们总会有算符在当前基组的表示.

当到了进行测量的时候, 即构成超块的两个块具有相同尺寸, 我们只需要知道算符在超块 Hilbert 空间的表示. 如果, 例如算符作用在左块之内的一个位点, 这意味着将它和作用于所有剩余空间的单位元 (包括两个中心位点和右块) 求张量积.

如果 :math:`i` 很小, 即所选的位点接近块的终端, 在进行测量之前需要进行很多次基组变换. 由于这个过程中的截断, 精确度会降低 (因为截断不是基于对所测量的量的最优表示, 而是基于基态能量). 我们期望在接近链中间位点的观测量获得较高的精确度.

对于非局域算符问题在某种程度上更复杂. 例如考虑自旋关联 :math:`C_s(i, j) = \langle S_i^z S_j^z \rangle`. 一般地可以仅仅取涉及的 :math:`S^z` 算符的表示, 并计算它们的乘积, 当达到对称构型时. 但是, 有一个更加精确的方法来进行这个测量. 作为例子, 我们考虑 :math:`j=i+1` 时自旋-自旋关联, 对称构型在 :math:`L/2 = i+2` 时达到. 在链长度 :math:`i+2` 时两个算符的表示是 (:math:`I_d` 是单个位点的单位矩阵, :math:`I_b` 表示的是块的单位矩阵)

.. math::
    (S_i^z)_{i+2}^e =&\ \Big( O_{i+1} \big( \big( O_i(I_b \otimes S^z ) O_i^\dagger \big) \otimes I_d \big) O_{i+1}^\dagger \Big) \otimes I_d \\
    (S_{i+1}^z)_{i+2}^e =&\ \Big( O_{i+1} \big( I_b \otimes S^z \big) O_{i+1}^\dagger \Big) \otimes I_d

因此得到自旋关联

.. math::
    (S_i^z S_{i+1}^z)_{i+2}^e =&\ \Big[\Big( O_{i+1} \big( \big( O_i(I_b \otimes S^z ) O_i^\dagger \big) \otimes I_d \big) O_{i+1}^\dagger \Big) \otimes I_d \Big] \Big[
        \Big( O_{i+1} \big( I_b \otimes S^z \big) O_{i+1}^\dagger \Big) \otimes I_d
        \Big] \\
    =&\ \Big[\Big( O_{i+1} \big( \big( O_i(I_b \otimes S^z ) O_i^\dagger \big) \otimes I_d \big) O_{i+1}^\dagger \Big) \Big] \Big[
        \Big( O_{i+1} \big( I_b \otimes S^z \big) O_{i+1}^\dagger \Big)
        \Big] \otimes I_d

其中代表中间两个位点 :math:`I_d` 与期望值无关, 可以移去后在子空间进行矩阵相乘. 最终结果是子空间的相乘的结果扩增到原空间, 所以只剩一个 :math:`\otimes I_d`.

计算矩阵的另一种方式是尽快将两个矩阵相乘. 在这个情况下, 这个操作可以在扩增块大小为 :math:`i+1` 时进行, 给出

.. math::
    C_s(i,i+1)_{i+1} = \Big( O_{i+1} \big( O_i(I_b \otimes S^z ) O_i^\dagger \big) \otimes I_d \big) \big( I_b \otimes S^z \big) O_{i+1}^\dagger

而在此之后, :math:`(C_s(i,i+1))_{i+1}` 将作为一个整体来进行变换. 它在具有 :math:`i+2` 位点的扩增块的表示是

.. math::
    C_s(i,i+1)_{i+2}^e =  C_s(i,i+1)_{i+1} \otimes I_d

比较两种方法, 区别是在 :math:`S^z` 算符之间的 :math:`O_{i+1}^\dagger O_{i+1}` 因子. 如果没有态截断, 它将是两个幺正矩阵的乘积, 因而是单位矩阵. 两种方法应该是等效的. 但当有截断时, 这不再成立, 因为 :math:`O_{i+1}^\dagger O_{i+1}` 导致矩阵乘法的精度降低, 因为我们没有直接矩阵相乘, 而是计算它们投影的乘积. 当位点 :math:`i` 和 :math:`j` 相距很远的时候, 这个误差变得更大, 因为每个分隔位点增加了另一对 :math:`O^\dagger O`.

对于 :math:`DMRG` 过程, 这意味着我们必须使用后一种方法, 尽早计算算符乘积. 在计算之前, 必须列出我们感兴趣的算符列表. 当扩增链的时候, **在位点上** 的算符在它们生成时就存储, 并在每次基组变化时更新. **两位点** 算符的乘积在两个算符的表示都存在的时候构成并存储, 然后进行更新. 对于包括更多单一位点算符的算符, 按照相同方式处理.

如果我们测量在不同块之间的位点之间的关联, 我们不能在对称构型之前计算它们的乘积. 这意味着跨过中心的关联的测量总会产生更大的误差, 相对于两个算符都在相同块的测量.

根据这些解释, 测量观测量需要附加的存储和计算量. 为了节省计算时间, 测量过程尽量在计算后期进行, 在达到收敛之后. 在无限尺寸系统算法我们限制为只考虑接近链中间的位点, 它们在最后被添加. 在有限尺寸算法在最初扫描不进行测量, 因为那时能量尚未收敛.

一般地说, 估计观测量的值的误差是困难的, 除了观测量是能量的情况. 对能量而言, 误差正比于截断误差. 不幸的是, 没有已知的方法, 依据其他测量的量来计算观测量的误差. 但是, 通过改变保留的态数目 :math:`m` 来检查结果的稳定性, 我们可以对误差有定性的控制. 能量的误差一般比观测量的误差低, 因为它是很多项之和的平均.

5.6 一般讨论
------------

当考虑费米子模型, 比如 Hubbard 模型和 :math:`t-J` 模型时, 我们必须实现费米子算符的反对易关系.

为了在 DMRG 实现 PBC, 需要特别的超块构型. DMRG 在 PBC 表现糟糕. 一般地, 对给定的精确度, 在 FBC 当在截断中保留 :math:`m` 个态,  将需要 :math:`m^2` 态来在 PBC 达到相同的精确度.

DMRG 的一个重要提升在于在每一步跟踪波函数, 并对对应于当前超块的基组进行变换. 由于一个好的初始猜测将会提升兰索斯或者 Davidson 的收敛, 这会节省超块对角化的时间.

当 DMRG 过程收敛到固定点时, 超块基态可以简单地写为矩阵乘积形式, 也可以从一个简单的变分拟设重新推导出, 而不借用 DMRG 构造. 这些非常有趣的分析结果在 Ref. 32 得到, 并给出 DMRG 算法背后的机制的一些观点.
